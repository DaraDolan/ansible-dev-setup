---
- name: Include platform-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

# Get the correct user info
- name: Get current username
  command: whoami
  register: username_result
  changed_when: false
  become: false

- name: Get user's home directory
  shell: 'echo $HOME'
  register: user_home
  changed_when: false
  become: false

# Install Neovim repository and dependencies
- name: Install software-properties-common (for add-apt-repository)
  apt:
    name: software-properties-common
    state: present
  when: ansible_os_family == "Debian"
  become: true

- name: Add Neovim unstable PPA
  apt_repository:
    repo: ppa:neovim-ppa/unstable
    state: present
  when: ansible_os_family == "Debian"
  become: true

# Install Neovim and dependencies
- name: Install Neovim and dependencies (Debian/Ubuntu)
  apt:
    name: "{{ neovim_packages }}"
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"
  become: true

- name: Install Neovim and dependencies (macOS)
  homebrew:
    name: "{{ item }}"
    state: present
  with_items: "{{ neovim_packages }}"
  when: ansible_os_family == "Darwin"

# Install Python and Node.js providers for Neovim
- name: Install Python provider for Neovim
  pip:
    name: pynvim
    extra_args: --user
  become: false

- name: Install Node.js provider for Neovim
  npm:
    name: neovim
    global: yes
  become: "{{ ansible_os_family == 'Debian' }}"

- name: Install Node.js and npm (for markdown-preview plugin)
  apt:
    name:
      - nodejs
      - npm
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"
  become: true

- name: Install PHP and Composer (for phpactor plugin)
  apt:
    name:
      - php-cli
      - unzip
    state: present
  when: ansible_os_family == "Debian"
  become: true

- name: Download Composer installer
  get_url:
    url: https://getcomposer.org/installer
    dest: /tmp/composer-setup.php
    mode: 0755
  when: ansible_os_family == "Debian"

- name: Install Composer globally
  command: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
  args:
    creates: /usr/local/bin/composer
  when: ansible_os_family == "Debian"
  become: true

# Create config directories
- name: Create base config directory
  file:
    path: "{{ user_home.stdout }}/.config"
    state: directory
    mode: 0755
    owner: "{{ username_result.stdout }}"
    group: "{{ username_result.stdout }}"
  become: false

- name: Create Neovim configuration directories
  file:
    path: "{{ user_home.stdout }}/.config/nvim/{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ username_result.stdout }}"
    group: "{{ username_result.stdout }}"
  with_items:
    - ""
    - "lua"
    - "lua/core"
    - "lua/plugins"
    - "snippets"
  become: false

# Copy configuration files
- name: Copy Neovim main configuration
  copy:
    src: "init.lua"
    dest: "{{ user_home.stdout }}/.config/nvim/init.lua"
  become: false

- name: Copy Neovim core configuration files
  copy:
    src: "lua/core/{{ item }}"
    dest: "{{ user_home.stdout }}/.config/nvim/lua/core/{{ item }}"
  with_items:
    - "init.lua"
    - "options.lua"
    - "keymaps.lua"
    - "autocmds.lua"
  become: false

- name: Copy Neovim plugin configuration files
  copy:
    src: "lua/plugins/{{ item }}"
    dest: "{{ user_home.stdout }}/.config/nvim/lua/plugins/{{ item }}"
  with_items:
    - "init.lua"
  become: false

- name: Copy Neovim snippet files
  copy:
    src: "snippets/{{ item }}"
    dest: "{{ user_home.stdout }}/.config/nvim/snippets/{{ item }}"
  with_items:
    - "php.json"
    - "markdown.json"
  become: false

# Create data directories
- name: Create Neovim data directories
  file:
    path: "{{ user_home.stdout }}/.local/share/nvim/{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ username_result.stdout }}"
    group: "{{ username_result.stdout }}"
  with_items:
    - "site"
    - "undo"
  become: false

# Install Nerd Fonts
- name: Install Nerd Font (macOS)
  homebrew:
    name: font-hack-nerd-font
    state: present
    cask: yes
  when: ansible_os_family == "Darwin"

- name: Inform about manual font installation (Linux)
  debug:
    msg: "For the best experience, please install a Nerd Font manually: https://www.nerdfonts.com/font-downloads"
  when: ansible_os_family == "Debian"
